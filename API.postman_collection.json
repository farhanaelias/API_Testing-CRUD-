{
	"info": {
		"_postman_id": "dc12b60b-8b3d-4685-9b85-89669c35b00a",
		"name": "API",
		"description": "API_Testing (CRUD)",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "40139252"
	},
	"item": [
		{
			"name": "create",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json()\r",
							"pm.environment.set(\"id\",jsonData.bookingid)\r",
							"\r",
							"\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var firstName = pm.variables.replaceIn(\"{{$randomFirstName}}\")\r",
							"console.log(firstName)\r",
							"pm.environment.set(\"firstName\", firstName)\r",
							"\r",
							"var lastName = pm.variables.replaceIn(\"{{$randomLastName}}\")\r",
							"console.log(lastName)\r",
							"pm.environment.set(\"lastName\", lastName)\r",
							"\r",
							"var totalPrice = pm.variables.replaceIn(\"{{$randomInt}}\")\r",
							"console.log(totalPrice)\r",
							"pm.environment.set(\"totalPrice\", totalPrice)\r",
							"\r",
							"var depositPaid = pm.variables.replaceIn(\"{{$randomBoolean}}\")\r",
							"pm.environment.set(\"depositPaid\",depositPaid)\r",
							"\r",
							"\r",
							"//Date\r",
							"\r",
							"const moment = require('moment')\r",
							"const today = moment()\r",
							"var checkin = today.add(5, 'd').format(\"YYYY-MM-DD\")\r",
							"pm.environment.set(\"checkin\", checkin)\r",
							"\r",
							"var checkout = today.add(5, 'd').format(\"YYYY-MM-DD\")\r",
							"pm.environment.set(\"checkout\", checkout)\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\t\"firstname\" : \"{{firstName}}\",\r\n\t\"lastname\" : \"{{lastName}}\",\r\n\t\"totalprice\" : {{totalPrice}},\r\n\t\"depositpaid\" : {{depositPaid}},\r\n\t\"bookingdates\" : {\r\n    \t\"checkin\" : \"{{checkin}}\",\r\n    \t\"checkout\" : \"{{checkout}}\"\r\n\t},\r\n\t\"additionalneeds\" : \"lunch\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/booking/",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"booking",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Get-info",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var statusCode = pm.response.code\r",
							"console.log(statusCode)\r",
							"if(statusCode==200){\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var jsonData = pm.response.json()\r",
							"pm.test(\"First Name Validation\", function(){\r",
							"    pm.expect(jsonData.firstname).to.eql(pm.environment.get(\"firstName\"))\r",
							"})\r",
							"var jsonData = pm.response.json()\r",
							"pm.test(\"Last Name Validation\", function(){\r",
							"    pm.expect(jsonData.lastname).to.eql(pm.environment.get(\"lastName\"))\r",
							"})\r",
							"\r",
							"pm.test(\"Total Price Validation\",function(){\r",
							"    pm.expect(jsonData.totalprice).to.eql(parseInt(pm.environment.get(\"totalPrice\")))\r",
							"\r",
							"})\r",
							"\r",
							"pm.test(\"CheckIn Date Validation\",function(){\r",
							"    pm.expect(jsonData.bookingdates.checkin).to.eql(pm.environment.get(\"checkin\"))\r",
							"\r",
							"})\r",
							"\r",
							"pm.test(\"CheckOut Date Validation\",function(){\r",
							"    pm.expect(jsonData.bookingdates.checkout).to.eql(pm.environment.get(\"checkout\"))\r",
							"\r",
							"})\r",
							"}else if(statusCode==404)\r",
							"{\r",
							"    pm.test(\"Not Found\")\r",
							"}else{\r",
							"    pm.test(\"Something went wrong...\")\r",
							"}"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"packages": {},
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/booking/{{id}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"booking",
						"{{id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "token-generate",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let jsonData = pm.response.json()\r",
							"pm.environment.set(\"token\", jsonData.token)"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\t\"username\": \"admin\",\r\n\t\"password\": \"password123\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://restful-booker.herokuapp.com/auth",
					"protocol": "https",
					"host": [
						"restful-booker",
						"herokuapp",
						"com"
					],
					"path": [
						"auth"
					]
				}
			},
			"response": []
		},
		{
			"name": "update-by-id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"//first name\r",
							"var updated_firstName = pm.variables.replaceIn(\"{{$randomFirstName}}\")\r",
							"// console.log(firstName)    \r",
							"pm.environment.set(\"updated_firstName\",updated_firstName)\r",
							"\r",
							"//last name\r",
							"var updated_lastName = pm.variables.replaceIn(\"{{$randomLastName}}\")\r",
							"pm.environment.set(\"updated_lastName\",updated_lastName)\r",
							"\r",
							"//total price\r",
							"var updated_totalPrice = pm.variables.replaceIn(\"{{$randomInt}}\")\r",
							"pm.environment.set(\"updated_totalPrice\",updated_totalPrice)\r",
							"\r",
							"//depositpaid\r",
							"var updated_depositPaid = pm.variables.replaceIn(\"{{$randomBoolean}}\")\r",
							"pm.environment.set(\"updated_depositPaid\",updated_depositPaid)\r",
							"\r",
							"\r",
							"//Date\r",
							"const moment = require('moment')\r",
							"const today = moment()\r",
							"\r",
							"//checkin\r",
							"var updated_checkin = today.add(5,'d').format(\"YYYY-MM-DD\")\r",
							"pm.environment.set(\"updated_checkin\",updated_checkin)\r",
							"\r",
							"// checkout\r",
							"var updated_checkout = today.add(5,'d').format(\"YYYY-MM-DD\")\r",
							"pm.environment.set(\"updated_checkout\",updated_checkout)\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Cookie",
						"value": "token={{token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\t\"firstname\" : \"{{updated_firstName}}\",\r\n\t\"lastname\" : \"{{updated_lastName}}\",\r\n\t\"totalprice\" : {{updated_totalPrice}},\r\n\t\"depositpaid\" : {{updated_depositPaid}},\r\n\t\"bookingdates\" : {\r\n    \t\"checkin\" : \"{{updated_checkin}}\",\r\n    \t\"checkout\" : \"{{updated_checkout}}\"\r\n\t},\r\n\t\"additionalneeds\" : \"lunch\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/booking/{{id}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"booking",
						"{{id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "varify-after-update",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/booking/{{id}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"booking",
						"{{id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "New Request",
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Cookie",
						"value": "token=a11bc5bbcc109a7",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/booking/{{id}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"booking",
						"{{id}}"
					],
					"query": [
						{
							"key": "",
							"value": null,
							"disabled": true
						}
					]
				}
			},
			"response": []
		}
	]
}